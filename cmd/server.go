/*
 * Madrush API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package main

import (
	"net/http"
	"sync"
	"fmt"

	openapi "github.com/ennc0d3/madrush/internal/api"
	"github.com/ennc0d3/madrush/internal/handlers"
	log "github.com/ennc0d3/madrush/internal/logger"
)

func init() {
}

func main() {

	SubscriberApiService := openapi.NewSubscriberApiService()
	SubscriberApiController := openapi.NewSubscriberApiController(SubscriberApiService)

	SubscribersApiService := openapi.NewSubscribersApiService()
	SubscribersApiController := openapi.NewSubscribersApiController(SubscribersApiService)

	router := openapi.NewRouter(SubscriberApiController, SubscribersApiController)

	go startAuxilaryServices()

	log.Log("Starting server")
    log.Fatal(http.ListenAndServe(fmt.Sprintf(":%d", servicePort), router))
}

func startAuxilaryServices() {
	wg := sync.WaitGroup{}
	wg.Add(1)
	healthcheck, err := handlers.NewHealthCheckService()
	if err != nil {
		log.Fatal(err)
	}
	if err := healthcheck.Start(); err != nil {
		log.Log(err)
		wg.Done()
	}
	wg.Wait()
}
